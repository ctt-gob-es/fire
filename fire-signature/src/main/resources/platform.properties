
# Configuracion de la conexion con la plataforma de actualizacion y validacion
# de firmas. Las propiedades aqui presentadas son las necesarias para
# configurar la conexion con la Plataforma @firma. Si se configurase otra
# plataforma, seria necesario sustituir estas propiedades por las
# correspondientes a la misma. 


# Identificador de la aplicacion frente a la Plataforma @firma
#afirma.appId=minhap.seap.dtic.clavefirma
afirma.appId=map.nivel2soporte.monitorizacion

# Timeout de conexion (-1 sin timeout)
webservices.timeout=50000

# URL del servicio Afirma. Debe tener la barra ("/") final  
#webservices.endpoint=http://des-afirma.redsara.es/afirmaws/services/
#webservices.endpoint=http://int-afirma.redsara.es/afirmaws/services/
#webservices.endpoint=http://pre-afirma64.redsara.es/afirmaws/services/
webservices.endpoint=http://borrar.es/afirmaws/services/

# Servicio DSS de validacion y actualizacion de firmas
webservices.service.signupgrade=DSSAfirmaVerify

# Servicio DSS de recuperacion de asincrona de firmas 
webservices.service.recoversignature=DSSAsyncRequestStatus

# Metodo de autenticacion 
#webservices.authorization.method		= BinarySecurityToken
webservices.authorization.method		= None

# Almacen de confianza para conexiones seguras
com.trustedstore.path					= C:/Users/carlos.gamuci/Documents/FIRe/Ficheros_Despliegue/Afirma_Desarrollo_SE/trust-pafirma.jks
com.trustedstore.password 				= 1234
com.trustedstore.type					= JKS


# Propiedades para el metodo BinarySecurityToken
webservices.authorization.ks.path		   = C:/Users/carlos.gamuci/Documents/Criptografia/Certificados_pruebas/EIDAS_CERTIFICADO_PRUEBAS___99999999R__1234.p12
webservices.authorization.ks.type		   = PKCS12
webservices.authorization.ks.password	   = 1234
webservices.authorization.ks.cert.alias    = eidas_certificado_pruebas___99999999r
webservices.authorization.ks.cert.password = 1234
